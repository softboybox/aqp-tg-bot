name: Deploy to DEV

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Inject Doppler Secrets into .env file
        run: |
          doppler secrets download --no-file --format env > .env
          echo "âœ… .env file generated from Doppler"
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_DEV_TOKEN }}
          DOPPLER_PROJECT: aqp_tg_bot
          DOPPLER_CONFIG: dev
      
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Starting deployment..."
            
            # Create project directory if it doesn't exist
            mkdir -p ~/aqp-tg-bot
            
            # Stop running containers
            cd ~/aqp-tg-bot
            docker-compose down 2>/dev/null || true
            
            echo "Server prepared for deployment."
          script_stop: true
      
      - name: Transfer docker-compose file and env
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml,.env"
          target: "~/aqp-tg-bot"
          strip_components: 0
      
      - name: Start services
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/aqp-tg-bot
            
            # Login to Docker Hub on the server
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            
            # Pull and start containers
            docker-compose pull
            docker-compose up -d
            
            docker system prune -f
            
            # Verify deployment
            echo "Deployment status:"
            docker-compose ps
